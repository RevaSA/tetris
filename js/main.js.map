{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/constants.js","webpack:///./src/js/Tetromino.js","webpack:///./src/js/Board.js","webpack:///./src/js/Account.js","webpack:///./src/js/Game.js","webpack:///./src/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SELECTORS","KEY","MOVES","y","x","shape","length","forEach","row","reverse","COLORS","SHAPES","POINTS","Tetromino","ctx","this","spawn","noOfTypes","Math","floor","random","typeId","randomizeType","color","fillStyle","fillRect","Board","ctxNext","account","tetromino","grid","getEmptyBoard","setStartPosition","getNewPiece","every","dy","dx","insideWalls","aboveFloor","notOccupied","Array","map","fill","draw","drawBoard","valid","move","freeze","clearLines","next","lines","splice","unshift","values","clearRect","canvas","width","height","Account","cache","initProxyValues","subscribe","onChangeLine","callbacks","score","level","elements","document","querySelector","Proxy","set","target","oldValue","textContent","cb","push","countLines","getLinesClearPoints","Game","events","initCanvases","board","onChangeLevel","canvasNext","buttonPlay","time","start","elapsed","addEventListener","play","moveTetromino","getContext","COLS","ROWS","scale","reset","resetGame","animate","event","keyCode","preventDefault","now","drop","gameOver","requestId","requestAnimationFrame","max","cancelAnimationFrame","font","fillText","window"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const COLS = 10\nexport const ROWS = 20\nexport const BLOCK_SIZE = 30\nexport const SELECTORS = {\n    canvas: '[data-canvas]',\n    canvasNext: '[data-canvas-next]',\n    score: '[data-score]',\n    lines: '[data-lines]',\n    level: '[data-level]',\n    buttonPlay: '[data-button-play]',\n}\nexport const KEY = {\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n}\nexport const MOVES = {\n    [KEY.SPACE]: p => ({ ...p, y: p.y + 1 }),\n    [KEY.LEFT]: p => ({ ...p, x: p.x - 1 }),\n    [KEY.UP]: p => {\n        for (let y = 0; y < p.shape.length; ++y) {\n            for (let x = 0; x < y; ++x) {\n                [p.shape[x][y], p.shape[y][x]] = [p.shape[y][x], p.shape[x][y]];\n            }\n        }\n\n        p.shape.forEach(row => row.reverse());\n        return p;\n    },\n    [KEY.RIGHT]: p => ({ ...p, x: p.x + 1 }),\n    [KEY.DOWN]: p => ({ ...p, y: p.y + 1 }),\n}\nexport const COLORS = [\n    'cyan',\n    'blue',\n    'orange',\n    'yellow',\n    'green',\n    'purple',\n    'red'\n]\nexport const SHAPES = [\n    [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\n    [[2, 0, 0], [2, 2, 2], [0, 0, 0]],\n    [[0, 0, 3], [3, 3, 3], [0, 0, 0]],\n    [[4, 4], [4, 4]],\n    [[0, 5, 5], [5, 5, 0], [0, 0, 0]],\n    [[0, 6, 0], [6, 6, 6], [0, 0, 0]],\n    [[7, 7, 0], [0, 7, 7], [0, 0, 0]]\n]\nexport const POINTS = {\n    SINGLE: 100,\n    DOUBLE: 300,\n    TRIPLE: 500,\n    TETRIS: 800,\n    SOFT_DROP: 1,\n    HARD_DROP: 2,\n}\nexport const LINES_PER_LEVEL = 2\nexport const TIME_STEP = 100\nexport const TIME_MIN = 100\n","import { COLORS, SHAPES } from './constants'\n\nclass Tetromino {\n    constructor(ctx) {\n        this.ctx = ctx\n        this.spawn()\n    }\n\n    randomizeType(noOfTypes) {\n        return Math.floor(Math.random() * noOfTypes);\n    }\n\n    spawn() {\n        this.typeId = this.randomizeType(COLORS.length - 1);\n        this.shape = SHAPES[this.typeId];\n        this.color = COLORS[this.typeId];\n        this.x = 0;\n        this.y = 0;\n    }\n\n    setStartPosition() {\n        this.x = this.typeId === 4 ? 4 : 3;\n    }\n\n    draw() {\n        this.ctx.fillStyle = this.color\n        this.shape.forEach((row, y) => {\n            row.forEach((value, x) => {\n                // this.x, this.y - левый верхний угол фигурки на игровом поле\n                // x, y - координаты ячейки относительно матрицы фигурки (3х3)\n                // this.x + x - координаты ячейки на игровом поле\n                if (value) {\n                    this.ctx.fillRect(this.x + x, this.y + y, 1, 1)\n                }\n            })\n        })\n    }\n\n    move(p) {\n        this.x = p.x;\n        this.y = p.y;\n    }\n}\n\nexport default Tetromino\n","import { ROWS, COLS, KEY, MOVES, COLORS } from './constants'\nimport Tetromino from './Tetromino'\n\nclass Board {\n    constructor(ctx, ctxNext, account) {\n        this.ctx = ctx\n        this.ctxNext = ctxNext\n        this.account = account\n        this.tetromino = null\n    }\n\n    reset() {\n        this.grid = this.getEmptyBoard()\n        this.tetromino = new Tetromino(this.ctx);\n        this.tetromino.setStartPosition();\n        this.getNewPiece();\n    }\n\n    valid(p) {\n        return p.shape.every((row, dy) => {\n            return row.every((value, dx) => {\n                const x = p.x + dx\n                const y = p.y + dy\n                return value === 0 || (this.insideWalls(x) && this.aboveFloor(y) && this.notOccupied(x, y))\n            })\n        })\n    }\n\n    insideWalls(x) {\n        return x >= 0 && x < COLS\n    }\n\n    aboveFloor(y) {\n        return y <= ROWS\n    }\n\n    // не занята ли клетка поля другими фигурками\n    notOccupied(x, y) {\n        return this.grid[y] && this.grid[y][x] === 0\n    }\n\n    getEmptyBoard() {\n        return [...Array(ROWS)].map(() => Array(COLS).fill(0))\n    }\n\n    draw() {\n        this.tetromino.draw();\n        this.drawBoard();\n    }\n\n    drawBoard() {\n        this.grid.forEach((row, y) => {\n            row.forEach((value, x) => {\n                if (value) {\n                    this.ctx.fillStyle = COLORS[value - 1];\n                    this.ctx.fillRect(x, y, 1, 1);\n                }\n            });\n        });\n    }\n\n    drop() {\n        const p = MOVES[KEY.DOWN](this.tetromino);\n        if (this.valid(p)) {\n            this.tetromino.move(p);\n        } else {\n            this.freeze();\n            this.clearLines();\n\n            if (this.tetromino.y === 0) {\n                // Game over\n                return false\n            }\n\n            this.tetromino = this.next;\n            this.tetromino.ctx = this.ctx;\n            this.tetromino.setStartPosition();\n            this.getNewPiece();\n        }\n\n        return true\n    }\n\n    freeze() {\n        this.tetromino.shape.forEach((row, y) => {\n            row.forEach((value, x) => {\n                if (value > 0) {\n                    this.grid[y + this.tetromino.y][x + this.tetromino.x] = value;\n                }\n            });\n        });\n    }\n\n    clearLines() {\n        let lines = 0;\n\n        this.grid.forEach((row, y) => {\n            if (row.every(value => value > 0)) {\n                lines++;\n                this.grid.splice(y, 1);\n                this.grid.unshift(Array(COLS).fill(0));\n            }\n        });\n\n        this.account.values.lines += lines\n    }\n\n    getNewPiece() {\n        this.next = new Tetromino(this.ctxNext)\n        this.ctxNext.clearRect(0, 0, this.ctxNext.canvas.width, this.ctxNext.canvas.height)\n        this.next.draw()\n    }\n}\n\nexport default Board\n","import { POINTS, LINES_PER_LEVEL, SELECTORS } from './constants'\n\nclass Account {\n    constructor() {\n        this.cache()\n        this.initProxyValues()\n        this.subscribe('lines', this.onChangeLine.bind(this))\n    }\n\n    cache() {\n        this.callbacks = {\n            score: [],\n            lines: [],\n            level: [],\n        }\n        this.elements = {\n            score: document.querySelector(SELECTORS.score),\n            lines: document.querySelector(SELECTORS.lines),\n            level: document.querySelector(SELECTORS.level),\n        }\n    }\n\n    initProxyValues() {\n        const values = {\n            score: 0,\n            lines: 0,\n            level: 0,\n        }\n\n        this.values = new Proxy(values, {\n            set: (target, key, value) => {\n                const oldValue = target[key]\n\n                if (oldValue !== value) {\n                    target[key] = value\n                    this.elements[key].textContent = value\n                    this.callbacks[key].forEach(cb => cb(value, oldValue))\n                }\n\n                return true\n            }\n        })\n    }\n\n    reset() {\n        this.values.score = 0\n        this.values.lines = 0\n        this.values.level = 0\n    }\n\n    subscribe(key, cb) {\n        if (this.callbacks[key]) {\n            this.callbacks[key].push(cb)\n        }\n    }\n\n    getLinesClearPoints(countLines) {\n        const lines = [0, POINTS.SINGLE, POINTS.DOUBLE, POINTS.TRIPLE, POINTS.SINGLE, POINTS.TETRIS]\n        return (this.values.level + 1) * lines[countLines]\n    }\n\n    onChangeLine(value, oldValue) {\n        if (value > oldValue) {\n            this.values.score += this.getLinesClearPoints(value - oldValue)\n        }\n\n        if (this.values.lines >= LINES_PER_LEVEL) {\n            this.values.level++\n            this.values.lines -= LINES_PER_LEVEL\n        }\n    }\n}\n\nexport default Account\n","import { ROWS, COLS, BLOCK_SIZE, SELECTORS, KEY, MOVES, POINTS, TIME_STEP, TIME_MIN } from './constants'\nimport Board from './Board'\nimport Tetromino from './Tetromino'\nimport Account from './Account';\n\nclass Game {\n    constructor() {\n        this.cache()\n        this.events()\n        this.initCanvases()\n        this.account = new Account()\n        this.board = new Board(this.ctx, this.ctxNext, this.account)\n        this.account.subscribe('level', this.onChangeLevel.bind(this))\n    }\n\n    cache() {\n        this.canvas = document.querySelector(SELECTORS.canvas)\n        this.canvasNext = document.querySelector(SELECTORS.canvasNext)\n        this.buttonPlay = document.querySelector(SELECTORS.buttonPlay)\n        this.time = { start: 0, elapsed: 0, level: 1000 }\n    }\n\n    events() {\n        this.buttonPlay.addEventListener('click', this.play.bind(this))\n        document.addEventListener('keydown', this.moveTetromino.bind(this))\n    }\n\n    initCanvases() {\n        this.ctx = this.canvas.getContext('2d')\n        this.ctx.canvas.width = COLS * BLOCK_SIZE\n        this.ctx.canvas.height = ROWS * BLOCK_SIZE\n        this.ctx.scale(BLOCK_SIZE, BLOCK_SIZE)\n        this.ctxNext = this.canvasNext.getContext('2d')\n        this.ctxNext.canvas.width = 4 * BLOCK_SIZE\n        this.ctxNext.canvas.height = 4 * BLOCK_SIZE\n        this.ctxNext.scale(BLOCK_SIZE, BLOCK_SIZE)\n    }\n\n    resetGame() {\n        this.account.reset()\n        this.board.reset()\n        this.board.tetromino = new Tetromino(this.ctx)\n        this.board.tetromino.setStartPosition()\n    }\n\n    play() {\n        this.resetGame()\n        this.animate()\n    }\n\n    moveTetromino(event) {\n        if (!MOVES[event.keyCode]) {\n            return\n        }\n\n        event.preventDefault()\n        let p = MOVES[event.keyCode](this.board.tetromino)\n\n        if (event.keyCode === KEY.SPACE) {\n            while (this.board.valid(p)) {\n                this.account.values.score += POINTS.HARD_DROP\n                this.board.tetromino.move(p)\n                p = MOVES[KEY.DOWN](this.board.tetromino)\n            }\n        } else if (this.board.valid(p)) {\n            this.board.tetromino.move(p)\n\n            if (event.keyCode === KEY.DOWN) {\n                this.account.values.score += POINTS.SOFT_DROP\n            }\n        }\n    }\n\n    animate(now = 0) {\n        // обновить истекшее время\n        this.time.elapsed = now - this.time.start;\n\n        // если время отображения текущего фрейма прошло\n        if (this.time.elapsed > this.time.level) {\n            // начать отсчет сначала\n            this.time.start = now;\n\n            // \"уронить\" активную фигурку\n            if (!this.board.drop()) {\n                this.gameOver()\n                return\n            }\n        }\n\n        // очистить холст для отрисовки нового фрейма\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n\n        // отрисовать игровое поле\n        this.board.draw();\n        this.requestId = requestAnimationFrame(this.animate.bind(this));\n    }\n\n    onChangeLevel() {\n        this.time.level = Math.max(this.time.level - TIME_STEP, TIME_MIN)\n    }\n\n    gameOver() {\n        cancelAnimationFrame(this.requestId);\n        this.ctx.fillStyle = 'black';\n        this.ctx.fillRect(1, 3, 8, 1.2);\n        this.ctx.font = '1px Arial';\n        this.ctx.fillStyle = 'red';\n        this.ctx.fillText('GAME OVER', 1.8, 4);\n    }\n}\n\nexport default Game\n","import Game from './Game'\r\n\r\nwindow.addEventListener('load', () => {\r\n    new Game()\r\n})\r\n"],"sourceRoot":""}